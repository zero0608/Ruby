<%- if params[:report_type] == "shipment" -%>
  <%- headers = ["Order Number", "Customer Name", "Order Value", "Order Date", "Shipping Address", "City", "State", "Country", "Zip", "Shipment Type", "Local", "Carrier Name", "Carrier Quote", "Freight Invoice", "WGD Name", "WGD Fee", "Additional Charges", "Total Shipping Cost", "Customer Invoiced", "Additional Fees", "Status", "Shipped Date"] -%>
<%= CSV.generate_line headers -%>
  <%- if @shipping_details.present? -%>
    <%- @shipping_details.each do |ship| -%>
<%= CSV.generate_line([ship.order.name, ship.order&.customer&.full_name&.titleize, number_to_currency(ship.order&.line_items&.sum {|s| mul(s&.price, s&.quantity)} - (ship.order&.discount_codes.present? ? ship.order&.discount_codes["discount_amount"]&.to_f&.abs : 0) + ship.order&.shipping_line&.price.to_f + (ship.order&.tax_lines.present? ? ship.order&.tax_lines["price"]&.to_f : 0) + ship.order&.order_adjustments&.sum { |s| s&.amount&.to_f }), ship.order&.created_at&.strftime("%B %d, %Y"), ship.order&.shipping_address&.address1, ship.order&.shipping_address&.city, ship.order&.shipping_address&.address2, ship.order&.shipping_address&.country, ship.order&.shipping_address&.zip, ship.order&.shipping_line&.title, ship.local_pickup == "1" ? "Yes" : "No", Carrier.find_by(id: ship&.carrier_id)&.name&.titleize, "#{ship.shipping_quotes.find_by(selected: true).amount}" , number_to_currency(ship&.actual_invoiced.to_f), ship&.white_glove_address&.company ,number_to_currency(ship&.white_glove_fee.to_f), number_to_currency(ship&.shipping_costs.where(cost_type: "charges").sum(:amount)), number_to_currency(ship&.actual_invoiced.to_f + ship&.white_glove_fee.to_f + ship&.shipping_costs.where(cost_type: "charges").sum(:amount)), number_to_currency(ship.order&.shipping_line&.price.to_f), number_to_currency(ship&.shipping_costs.where(cost_type: "fees").sum(:amount)), ship&.status&.titleize, ship.shipped_date&.strftime("%B %d, %Y")]).html_safe -%>
    <%- end -%>
  <%- end -%>
<%- elsif params[:report_type] == "order" -%>
  <%# params[:status] == "5" is "shipped" status, adds "shipped date" to report #%>
  <%- if params[:status] == "5" -%>
    <%- headers = ["Order Number", "Type", "QS/MTO", "Customer", "Order Date", "Shipped Date", "Shipping", "Tax", "Total Amount", "Order Status", "Shipping Method", "Shipping Address", "City", "State", "Country", "ZIP", "Selected Carrier Name", "Carrier Quote"] -%>
  <%- else -%>
    <%- headers = ["Order Number", "Type", "QS/MTO", "Customer", "Order Date", "Shipping", "Tax", "Total Amount", "Order Status", "Shipping Method", "Shipping Address", "City", "State", "Country", "ZIP", "Selected Carrier Name", "Carrier Quote"] -%>
  <%- end -%>
  <%- carrier_count = @orders.map { |order| order.shipping_details.first.shipping_quotes.where.not(carrier_id: nil).where.not(selected: true).count }.max -%>
  <%- headers += ["Carrier Name", "Carrier Quote"] * carrier_count -%>
  <%- headers += ["Freight Invoice", "WGD Name", "WGD Fee", "Additional Charges", "Total Shipping Cost", "Total Weight", "Overhang", "Shipment Status"] -%>
  <%- item_count = @orders.map { |order| order.line_items.where("(title NOT LIKE ?) and (sku NOT LIKE ?) and (sku NOT LIKE ?) and (sku NOT LIKE ?) and (sku NOT LIKE ?) and (sku NOT LIKE ?)", "Default Title", "%warranty%", "WGS001", "HLD001", "HFE001", "Replacement-Parts").count }.max -%>
  <%- headers += ["SKU", "title", "Quantity", "Item Status"] * item_count -%>
<%= CSV.generate_line headers -%>
  <%- @orders.each do |order| -%>
    <%- @tax = order&.tax_lines.present? ? order&.tax_lines["price"]&.to_f : 0 -%>
    <%- ship = order.shipping_details.first -%>
    <%- if params[:status] == "5" -%>
      <%- data = [order.name, order.order_type, order.kind_of_order, order&.customer&.full_name, order.created_at.strftime("%B %d, %Y"), order.shipping_details.where.not(shipped_date: nil)&.order(:shipped_date)&.first&.shipped_date&.strftime("%B %d, %Y"), number_to_currency(order&.shipping_line&.price), number_to_currency(@tax), number_to_currency(order.total_amount), order&.status&.titleize, order&.shipping_line&.title, order&.shipping_address&.address1, order&.shipping_address&.city, order&.shipping_address&.address2, order&.shipping_address&.country, order&.shipping_address&.zip, ship&.shipping_quotes.where.not(carrier_id: nil).find_by(selected: true)&.carrier&.name, number_to_currency(ship&.shipping_quotes.find_by(selected: true)&.amount)] -%>
    <%- else -%>
      <%- data = [order.name, order.order_type, order.kind_of_order, order&.customer&.full_name, order.created_at.strftime("%B %d, %Y"), number_to_currency(order.try(:shipping_line).try(:price)), number_to_currency(@tax), number_to_currency(order.total_amount), order&.status&.titleize, order&.shipping_line&.title, order&.shipping_address&.address1, order&.shipping_address&.city, order&.shipping_address&.address2, order&.shipping_address&.country, order&.shipping_address&.zip, ship&.shipping_quotes.where.not(carrier_id: nil).find_by(selected: true)&.carrier&.name, number_to_currency(ship&.shipping_quotes.find_by(selected: true)&.amount)] -%>
    <%- end -%>
    <%- ship.shipping_quotes.where.not(carrier_id: nil).where.not(selected: true).each do |quote| -%>
      <%- data += [quote&.carrier&.name, number_to_currency(quote&.amount) ] -%>
    <%- end -%>
    <%- data += ["", ""] * (@orders.map { |order| order.shipping_details.first.shipping_quotes.where.not(carrier_id: nil).where.not(selected: true).count }.max - ship.shipping_quotes.where.not(carrier_id: nil).where.not(selected: true).count) %>
    <%- data += [number_to_currency(ship&.actual_invoiced.to_f), ship&.white_glove_address&.company, number_to_currency(ship&.white_glove_fee.to_f), number_to_currency(ship&.shipping_costs.where(cost_type: "charges").sum(:amount)), number_to_currency(ship&.actual_invoiced.to_f + ship&.white_glove_fee.to_f + ship&.shipping_costs.where(cost_type: "charges").sum(:amount)), order&.shipping_details&.sum { |sd| (sd&.pallet_shippings&.sum { |ps| ps&.weight.to_f }).to_f }, (order.shipping_details.first.overhang == "1" ? "Yes" : "No"), order&.shipping_details.first.status&.titleize] -%>
    <%- order.line_items.where("(title NOT LIKE ?) and (sku NOT LIKE ?) and (sku NOT LIKE ?) and (sku NOT LIKE ?) and (sku NOT LIKE ?) and (sku NOT LIKE ?)", "Default Title", "%warranty%", "WGS001", "HLD001", "HFE001", "Replacement-Parts").each do |item| -%>
      <%- data += [item.sku.upcase, item.title, item.quantity.to_i, item.status&.titleize] -%>
    <%- end -%>
<%= CSV.generate_line(data).html_safe -%>
  <%- end -%>
<%- elsif params[:report_type] == "claim_order" -%>
  <%- headers = ['Issue number', 'Order Number', 'Ticket Description', 'Status', 'Order Date', 'Claim Date', 'Days In Claim', 'Type', 'Shipping Method', 'Carrier', 'Quote', 'WGD', 'Order Total', 'Claims Ref', 'Claims Submission Date', 'Shipping Claims', 'Shipping Dispute', 'Claims Amount', 'Shipping Invoice', 'Charge back ID', 'Charge Back Reason', 'Win Likelyhood', 'Chargeback Dispute', 'Outcome Notes', 'Replacement Order Number', 'Customer Name', 'Shipping Address', 'Shipping City', 'Shipping State', 'Zip Code', 'Product Sku', 'Qty', 'Order Total', 'Carrier', 'Quote', 'WGD'] -%>
<%= CSV.generate_line headers -%>
  <%- @issues.each do |issue| -%>
    <%- @sum = issue&.order&.line_items.pluck(:quantity).reject(&:blank?).map(&:to_i).blank? ? 0 : ((issue&.order&.line_items.pluck(:price).reject(&:blank?).map(&:to_i).zip(issue&.order&.line_items.pluck(:quantity).reject(&:blank?).map(&:to_i)).map{|x, y| x.to_f * y}).sum) -%>
    <%- data = [issue.id, issue&.order&.name, issue&.description, issue&.status, issue&.order.created_at.strftime("%B %d, %Y"), issue.created_at.strftime("%B %d, %Y"), (Date.today - issue.created_at.to_date).to_i, issue&.issue_type, issue&.order&.shipping_line&.title, issue&.order&.shipping_details&.first.try(:carrier).try(:name), '', issue&.order&.shipping_details&.first.white_glove_delivery, "$#{@sum}", issue&.claims_reference, issue&.claims_submission_date, issue&.dispute_type, issue&.claims_dispute, issue&.dispute_amount, issue&.invoice_pay, issue&.chargeback_id, issue&.chargeback_reason, issue&.win_likelihood, issue&.chargeback_dispute, issue&.outcome_notes ] -%>
    <%- if issue.order_link.present? -%>
      <%- issue.order_link&.split(",").uniq.reject { |s| s.to_s.empty? }.each do | id | -%>
        <%- order = Order.find_by(id: id) -%>
        <%- @sum = order&.line_items.pluck(:quantity).reject(&:blank?).map(&:to_i).blank? ? 0 : ((order&.line_items.pluck(:price).reject(&:blank?).map(&:to_i).zip(order&.line_items.pluck(:quantity).reject(&:blank?).map(&:to_i)).map{|x, y| x.to_f * y}).sum) -%>
        <%- data = data + [ order&.name, order&.customer&.full_name&.titleize, order&.shipping_address&.address1, order&.shipping_address&.city, order&.shipping_address&.address2, order&.shipping_address&.zip, order.line_items.pluck(:sku), order.line_items.pluck(:quantity), "$#{@sum}", order&.shipping_details&.first.carrier&.name, '', order&.shipping_details&.first.white_glove_delivery ] -%>
<%= CSV.generate_line(data).html_safe -%>
        <%- data = ["", "", "", "", "", "", "", "", "", "", '', '', '', '', '', '', '', '', '', '', '', '', '', '' ] -%>
      <%- end -%>
    <%- end -%>
  <%- end -%>
<%- elsif params[:report_type] == "email_order" -%>
  <%- headers = [ "Order Number", "Description", "SKU", "Type", "Product Status", "Shipping Status", "State/Province", "Qty", "Product Price", "Subtotal", "Subtotal after Discount", "Order Total", "Order Date", "ETC Date", "Order Status"] -%>
<%= CSV.generate_line headers -%>
  <%- @line_items.reject { |item| item.sku.to_s.empty? }.each do |line_item| -%>
    <%- discount_amount = line_item&.quantity.to_i * line_item&.price.to_f * (1 - (line_item.order&.discount_codes["discount_amount"]&.to_f&.abs) / (line_item&.order.line_items.pluck(:price).reject(&:blank?).map(&:to_i).zip(line_item&.order.line_items.pluck(:quantity).reject(&:blank?).map(&:to_i)).map{|x, y| x.to_f * y}).sum.to_i) if line_item.order&.discount_codes.present? %>
    <%- data = [line_item&.order&.name, line_item.title, line_item.sku, line_item&.order&.kind_of_order, line_item&.status&.titleize, line_item&.shipping_detail&.status&.titleize, line_item&.order&.shipping_address&.address2&.titleize, line_item&.quantity.to_i, number_to_currency(line_item&.price.to_f), number_to_currency(line_item&.quantity.to_i * line_item&.price.to_f), (line_item.order&.discount_codes.present? ? number_to_currency(discount_amount == nil || discount_amount.nan? || discount_amount <= 0 ? 0 : discount_amount) : number_to_currency(line_item&.quantity.to_i * line_item&.price.to_f)), "$#{(line_item&.order.line_items.pluck(:price).reject(&:blank?).map(&:to_i).zip(line_item&.order.line_items.pluck(:quantity).reject(&:blank?).map(&:to_i)).map{|x, y| x.to_f * y}).sum.to_i - (line_item.order&.discount_codes.present? ? line_item.order&.discount_codes["discount_amount"]&.to_f&.abs : 0) + line_item&.order.try(:shipping_line).try(:price).to_i + (line_item&.order&.tax_lines.present? ? line_item&.order&.tax_lines["price"]&.to_f : 0) }", line_item&.order.created_at.strftime("%B %d, %Y"), (line_item&.shipping_detail&.eta_from&.strftime("%B %d, %Y").to_s + " - " + line_item&.shipping_detail&.eta_to&.strftime("%B %d, %Y").to_s), line_item&.order&.status&.titleize] -%>
<%= CSV.generate_line(data).html_safe -%>
  <%- end -%>
<%- elsif params[:report_type] == "purchase_order" -%>
  <%- headers = ["SKU", "description", "assigned supplier", "Factory", "parent sku", "quantity ordered", "unit cost", "total cost (unity cost x quantity ordered)", "price", "stock (inventory or noninventory)", "status", "type", "purchase order number", "purchase order date"] -%>
<%= CSV.generate_line headers -%>
  <%- @purchases.each do |purchase| -%>
    <%- @store = purchase.store == 'us' ? 'TUS' : 'TCA' -%>
    <%- purchase.purchase_items.each do |item| -%>
      <%- data = [ item.product_variant.sku, item&.comment_description, item&.purchase&.supplier&.name, item.product_variant.factory, item&.product_variant&.product&.sku, item.quantity, item.product_variant.unit_cost, mul(item.product_variant.unit_cost, item.quantity), item.product_variant.price, item.product_variant.stock, item.status&.titleize, item.purchase_type, "#{@store}#{item.purchase.id}", item.purchase.created_at.strftime("%B %d, %Y")  ] -%>
<%= CSV.generate_line(data).html_safe -%>
    <%- end -%>
  <%- end -%>
<%- end -%>