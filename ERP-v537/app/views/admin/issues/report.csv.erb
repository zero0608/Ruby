<%- if @issue_type == "returns" -%>
  <%- headers = ["Claim #", "Order Number", "Customer Name", "Order Date", "Shipping Address", "Shipping State", "Telephone", "Email", "Status", "Issue", "Return Reason", "Issue Product", "Issue SKU", "Issue Qty", "Issue Amount", "Issue Total", "Restocking Fee", "Repacking Fee", "Return Quote", "Total Fees", "Refund Amount", "Shipping Cost", "Return Order", "Gorgias"] -%>
<%= CSV.generate_line headers -%>
  <%- @issues.each do |issue| -%>
    <%- unless issue.claims_refund_items.where("claims_refund_items.quantity > 0").count > 0 -%>
<%= CSV.generate_line([("ISS" + (issue&.order&.store == "us" ? "US" : "CA") + "-" + issue&.id.to_s), issue&.order&.name, issue&.order&.customer&.full_name, issue&.order&.created_at&.strftime("%B %d, %Y"), (issue&.order&.shipping_address&.address1.tr('[]','').tr('" "', ' ')&.titleize if issue&.order&.shipping_address&.address1.present?), issue&.order&.shipping_address&.address2&.titleize, issue&.order&.customer&.phone, issue&.order&.customer&.email, issue&.status&.titleize, issue&.issue_type&.titleize, issue&.return_reason, "", "", "", "", number_to_currency(issue&.full_refund ? issue&.order&.total_amount : issue&.claims_refund_items&.sum { |refund_item| refund_item.line_item.price.to_f * refund_item.quantity.to_i }), number_to_currency(issue&.restocking_fee.to_f), number_to_currency(issue&.repacking_fee.to_f), number_to_currency(issue&.returns.where.not(status: :cancelled).where(disposal: false).sum { |re| re.return_quote.to_f }), number_to_currency(issue&.repacking_fee.to_f + issue&.restocking_fee.to_f), number_to_currency((issue&.full_refund ? issue&.order&.total_amount : issue&.claims_refund_items&.sum { |refund_item| refund_item.line_item.price.to_f * refund_item.quantity.to_i }) - (issue.order&.shipping_line&.price.to_f * (1 + (issue.order.tax_lines["rate"] if issue.order.tax_lines.present?).to_f)) - (issue.repacking_fee.to_f + issue.restocking_fee.to_f) - issue.returns.where.not(status: :cancelled).sum { |re| re.return_quote.to_f }), number_to_currency(issue.returns.where.not(status: :cancelled).where(disposal: false).sum { |re| re.shipping_cost.to_f }), issue&.returns.where.not(status: :cancelled)&.pluck(:name), issue&.gorgias_ticket]).html_safe -%>
    <%- else -%>
      <%- issue.claims_refund_items.where("claims_refund_items.quantity > 0").joins(:line_item).order("line_items.sku").each do |item| -%>
        <%- if item == issue.claims_refund_items.where("claims_refund_items.quantity > 0").joins(:line_item).order("line_items.sku").first -%>
<%= CSV.generate_line([("ISS" + (issue&.order&.store == "us" ? "US" : "CA") + "-" + issue&.id.to_s), issue&.order&.name, issue&.order&.customer&.full_name, issue&.order&.created_at&.strftime("%B %d, %Y"), (issue&.order&.shipping_address&.address1.tr('[]','').tr('" "', ' ')&.titleize if issue&.order&.shipping_address&.address1.present?), issue&.order&.shipping_address&.address2&.titleize, issue&.order&.customer&.phone, issue&.order&.customer&.email, issue&.status&.titleize, issue&.issue_type&.titleize, issue&.return_reason, item&.line_item&.title, item&.line_item&.sku, item&.quantity, number_to_currency(item&.quantity&.to_i * item&.line_item&.price&.to_f), number_to_currency(issue&.full_refund ? issue&.order&.total_amount : issue&.claims_refund_items&.sum { |refund_item| refund_item.line_item.price.to_f * refund_item.quantity.to_i }), number_to_currency(issue&.restocking_fee.to_f), number_to_currency(issue&.repacking_fee.to_f), number_to_currency(issue&.returns.where.not(status: :cancelled).where(disposal: false).sum { |re| re.return_quote.to_f }), number_to_currency(issue.repacking_fee.to_f + issue.restocking_fee.to_f), number_to_currency((issue&.full_refund ? issue&.order&.total_amount : issue&.claims_refund_items&.sum { |refund_item| refund_item.line_item.price.to_f * refund_item.quantity.to_i }) - (issue.order&.shipping_line&.price.to_f * (1 + (issue.order.tax_lines["rate"] if issue.order.tax_lines.present?).to_f)) - (issue.repacking_fee.to_f + issue.restocking_fee.to_f) - issue.returns.where.not(status: :cancelled).sum { |re| re.return_quote.to_f }), number_to_currency(issue.returns.where.not(status: :cancelled).where(disposal: false).sum { |re| re.shipping_cost.to_f }), issue&.returns.where.not(status: :cancelled)&.pluck(:name), issue&.gorgias_ticket]).html_safe -%>
        <%- else -%>
<%= CSV.generate_line(['""', "", "", "", "", "", "", "", "", "", item&.line_item&.title, item&.line_item&.sku, item&.quantity, number_to_currency(item&.quantity&.to_i * item&.line_item&.price&.to_f), "", "", "", "", "", "", "", "", ""]).html_safe -%>
        <%- end -%>
      <%- end -%>
    <%- end -%>
  <%- end -%>
<%- elsif @issue_type == "product_claims" -%>
  <%- headers = ["Claim #", "Order Number", "Customer Name", "Order Date", "Shipping Address", "Shipping State", "Telephone", "Email", "Status", "Issue", "Claim Type", "Resolution Type", "Issue Product", "Issue SKU", "Issue Qty", "Issue Amount", "Issue Total", "Dicount Amount", "Warranty Amount", "Repair Service", "Repair Amount", "Replacement Order", "Replacement Type", "Gorgias"] -%>
<%= CSV.generate_line headers -%>
  <%- @issues.each do |issue| -%>
    <%- unless issue.claims_refund_items.where("claims_refund_items.quantity > 0").count > 0 -%>
<%= CSV.generate_line([("ISS" + (issue&.order&.store == "us" ? "US" : "CA") + "-" + issue&.id.to_s), issue&.order&.name, issue&.order&.customer&.full_name, issue&.order&.created_at&.strftime("%B %d, %Y"), (issue&.order&.shipping_address&.address1.tr('[]','').tr('" "', ' ')&.titleize if issue&.order&.shipping_address&.address1.present?), issue&.order&.shipping_address&.address2&.titleize, issue&.order&.customer&.phone, issue&.order&.customer&.email, issue&.status&.titleize, issue&.issue_type&.titleize, issue&.claim_type, issue&.resolution_type, "", "", "", "", number_to_currency(issue&.full_refund ? issue&.order&.total_amount : issue&.claims_refund_items&.sum { |refund_item| refund_item.line_item.price.to_f * refund_item.quantity.to_i }), number_to_currency(issue&.discount_amount.to_f), number_to_currency(issue&.warranty_amount.to_f), issue&.repair_services.pluck(:repair_type), number_to_currency(issue&.repair_services&.sum(:amount).to_f), (issue&.order_link&.split(",")&.uniq&.reject { |s| s.to_s.empty? }&.map { |id| Order.find_by(id: id)&.name } if issue&.order_link.present?), issue&.replacement_type&.titleize, issue&.gorgias_ticket]).html_safe -%>
    <%- else -%>
      <%- issue.claims_refund_items.where("claims_refund_items.quantity > 0").joins(:line_item).order("line_items.sku").each do |item| -%>
        <%- if item == issue.claims_refund_items.where("claims_refund_items.quantity > 0").joins(:line_item).order("line_items.sku").first -%>
<%= CSV.generate_line([("ISS" + (issue&.order&.store == "us" ? "US" : "CA") + "-" + issue&.id.to_s), issue&.order&.name, issue&.order&.customer&.full_name, issue&.order&.created_at&.strftime("%B %d, %Y"), (issue&.order&.shipping_address&.address1.tr('[]','').tr('" "', ' ')&.titleize if issue&.order&.shipping_address&.address1.present?), issue&.order&.shipping_address&.address2&.titleize, issue&.order&.customer&.phone, issue&.order&.customer&.email, issue&.status&.titleize, issue&.issue_type&.titleize, issue&.claim_type, issue&.resolution_type, item&.line_item&.title, item&.line_item&.sku, item&.quantity, number_to_currency(item&.quantity&.to_i * item&.line_item&.price&.to_f), number_to_currency(issue&.full_refund ? issue&.order&.total_amount : issue&.claims_refund_items&.sum { |refund_item| refund_item.line_item.price.to_f * refund_item.quantity.to_i }), number_to_currency(issue&.discount_amount.to_f), number_to_currency(issue&.warranty_amount.to_f), issue&.repair_services.pluck(:repair_type), number_to_currency(issue&.repair_services&.sum(:amount).to_f), (issue&.order_link&.split(",")&.uniq&.reject { |s| s.to_s.empty? }&.map { |id| Order.find_by(id: id)&.name } if issue&.order_link.present?), issue&.replacement_type&.titleize, issue&.gorgias_ticket]).html_safe -%>
        <%- else -%>
<%= CSV.generate_line(['""', "", "", "", "", "", "", "", "", "", "", item&.line_item&.title, item&.line_item&.sku, item&.quantity, number_to_currency(item&.quantity&.to_i * item&.line_item&.price&.to_f), "", "", "", "", "", "", "", ""]).html_safe -%>
        <%- end -%>
      <%- end -%>
    <%- end -%>
  <%- end -%>
<%- elsif @issue_type == "shipping_claims" -%>
  <%- headers = ["Claim #", "Order Number", "Customer Name", "Order Date", "Shipping Address", "Shipping State", "Telephone", "Email", "Status", "Issue", "Claim Type", "Curbside", "WGD", "Resolution Type", "Issue Product", "Issue SKU", "Issue Qty", "Issue Amount", "Issue Total", "Discount Amount", "Warranty Amount", "Repair Service", "Repair Amount", "Replacement Order", "Replacement Type", "Claim Reference", "Claim Amount", "Claim Type", "Claim Outcome", "Gorgias" ] -%>
<%= CSV.generate_line headers -%>
  <%- @issues.each do |issue| -%>
    <%- unless issue.claims_refund_items.where("claims_refund_items.quantity > 0").count > 0 -%>
<%= CSV.generate_line([("ISS" + (issue&.order&.store == "us" ? "US" : "CA") + "-" + issue&.id.to_s), issue&.order&.name, issue&.order&.customer&.full_name, issue&.order&.created_at&.strftime("%B %d, %Y"), (issue&.order&.shipping_address&.address1.tr('[]','').tr('" "', ' ')&.titleize if issue&.order&.shipping_address&.address1.present?), issue&.order&.shipping_address&.address2&.titleize, issue&.order&.customer&.phone, issue&.order&.customer&.email, issue&.status&.titleize, issue&.issue_type&.titleize, issue&.shipping_claim_type&.titleize, issue&.shipping_curbside, issue&.shipping_wgd, issue&.resolution_type, "", "", "", "", number_to_currency(issue&.full_refund ? issue&.order&.total_amount : issue&.claims_refund_items&.sum { |refund_item| refund_item.line_item.price.to_f * refund_item.quantity.to_i }), number_to_currency(issue&.discount_amount.to_f), number_to_currency(issue&.warranty_amount.to_f), issue&.repair_services.pluck(:repair_type), number_to_currency(issue&.repair_services&.sum(:amount).to_f), (issue&.order_link&.split(",")&.uniq&.reject { |s| s.to_s.empty? }&.map { |id| Order.find_by(id: id)&.name } if issue&.order_link.present?), issue&.replacement_type, issue&.claims_reference, number_to_currency(issue&.dispute_amount), issue&.dispute_type, (Issue.disputes.key(issue&.claims_dispute) if issue&.claims_dispute.present?), issue&.gorgias_ticket]).html_safe -%>
    <%- else -%>
      <%- issue.claims_refund_items.where("claims_refund_items.quantity > 0").joins(:line_item).order("line_items.sku").each do |item| -%>
        <%- if item == issue.claims_refund_items.where("claims_refund_items.quantity > 0").joins(:line_item).order("line_items.sku").first -%>
<%= CSV.generate_line([("ISS" + (issue&.order&.store == "us" ? "US" : "CA") + "-" + issue&.id.to_s), issue&.order&.name, issue&.order&.customer&.full_name, issue&.order&.created_at&.strftime("%B %d, %Y"), (issue&.order&.shipping_address&.address1.tr('[]','').tr('" "', ' ')&.titleize if issue&.order&.shipping_address&.address1.present?), issue&.order&.shipping_address&.address2&.titleize, issue&.order&.customer&.phone, issue&.order&.customer&.email, issue&.status&.titleize, issue&.issue_type&.titleize, issue&.shipping_claim_type&.titleize, issue&.shipping_curbside, issue&.shipping_wgd, issue&.resolution_type, item&.line_item&.title, item&.line_item&.sku, item&.quantity, number_to_currency(item&.quantity&.to_i * item&.line_item&.price&.to_f), number_to_currency(issue&.full_refund ? issue&.order&.total_amount : issue&.claims_refund_items&.sum { |refund_item| refund_item.line_item.price.to_f * refund_item.quantity.to_i }), number_to_currency(issue&.discount_amount.to_f), number_to_currency(issue&.warranty_amount.to_f), issue&.repair_services.pluck(:repair_type), number_to_currency(issue&.repair_services&.sum(:amount).to_f), (issue&.order_link&.split(",")&.uniq&.reject { |s| s.to_s.empty? }&.map { |id| Order.find_by(id: id)&.name } if issue&.order_link.present?), issue&.replacement_type, issue&.claims_reference, number_to_currency(issue&.dispute_amount), issue&.dispute_type, (Issue.disputes.key(issue&.claims_dispute) if issue&.claims_dispute.present?), issue&.gorgias_ticket]).html_safe -%>
        <%- else -%>
<%= CSV.generate_line(['""', "", "", "", "", "", "", "", "", "", "", "", "", item&.line_item&.title, item&.line_item&.sku, item&.quantity, number_to_currency(item&.quantity&.to_i * item&.line_item&.price&.to_f), "", "", "", "", "", "", "", "", "", "", "", ""]).html_safe -%>
        <%- end -%>
      <%- end -%>
    <%- end -%>
  <%- end -%>
<%- elsif @issue_type == "chargeback" -%>
  <%- headers = ["Claim #", "Order Number", "Customer Name", "Order Date", "Shipping Address", "Shipping State", "Telephone", "Email", "Status", "Issue", "Chargeback Reason", "Issue Product", "Issue SKU", "Issue Qty", "Issue Amount", "Issue Total", "Chargeback Amount", "Chargeback Date", "Card type", "Chargeback Outcome", "Gorgias"] -%>
<%= CSV.generate_line headers -%>
  <%- @issues.each do |issue| -%>
    <%- unless issue.claims_refund_items.where("claims_refund_items.quantity > 0").count > 0 -%>
<%= CSV.generate_line([("ISS" + (issue&.order&.store == "us" ? "US" : "CA") + "-" + issue&.id.to_s), issue&.order&.name, issue&.order&.customer&.full_name, issue&.order&.created_at&.strftime("%B %d, %Y"), (issue&.order&.shipping_address&.address1.tr('[]','').tr('" "', ' ')&.titleize if issue&.order&.shipping_address&.address1.present?), issue&.order&.shipping_address&.address2&.titleize, issue&.order&.customer&.phone, issue&.order&.customer&.email, issue&.status&.titleize, issue&.issue_type&.titleize, (Issue.chargebacks.key(issue&.chargeback_reason.to_i) if issue&.chargeback_reason.present?), "", "", "", "", number_to_currency(issue&.full_refund ? issue&.order&.total_amount : issue&.claims_refund_items&.sum { |refund_item| refund_item.line_item.price.to_f * refund_item.quantity.to_i }), number_to_currency(issue&.full_refund ? issue&.order&.total_amount : issue&.claims_refund_items&.sum { |refund_item| refund_item.line_item.price.to_f * refund_item.quantity.to_i }), issue&.chargeback_date&.strftime("%B %d, %Y"), (Issue.cards.key(issue&.card_type) if issue&.card_type.present?), (Issue.disputes.key(issue&.chargeback_dispute) if issue&.chargeback_dispute.present?), issue&.gorgias_ticket]).html_safe -%>
    <%- else -%>
      <%- issue.claims_refund_items.where("claims_refund_items.quantity > 0").joins(:line_item).order("line_items.sku").each do |item| -%>
        <%- if item == issue.claims_refund_items.where("claims_refund_items.quantity > 0").joins(:line_item).order("line_items.sku").first -%>
<%= CSV.generate_line([("ISS" + (issue&.order&.store == "us" ? "US" : "CA") + "-" + issue&.id.to_s), issue&.order&.name, issue&.order&.customer&.full_name, issue&.order&.created_at&.strftime("%B %d, %Y"), (issue&.order&.shipping_address&.address1.tr('[]','').tr('" "', ' ')&.titleize if issue&.order&.shipping_address&.address1.present?), issue&.order&.shipping_address&.address2&.titleize, issue&.order&.customer&.phone, issue&.order&.customer&.email, issue&.status&.titleize, issue&.issue_type&.titleize, (Issue.chargebacks.key(issue&.chargeback_reason.to_i) if issue&.chargeback_reason.present?), item&.line_item&.title, item&.line_item&.sku, item&.quantity, number_to_currency(item&.quantity&.to_i * item&.line_item&.price&.to_f), number_to_currency(issue&.full_refund ? issue&.order&.total_amount : issue&.claims_refund_items&.sum { |refund_item| refund_item.line_item.price.to_f * refund_item.quantity.to_i }), number_to_currency(issue&.full_refund ? issue&.order&.total_amount : issue&.claims_refund_items&.sum { |refund_item| refund_item.line_item.price.to_f * refund_item.quantity.to_i }), issue&.chargeback_date&.strftime("%B %d, %Y"), (Issue.cards.key(issue&.card_type) if issue&.card_type.present?), (Issue.disputes.key(issue&.chargeback_dispute) if issue&.chargeback_dispute.present?), issue&.gorgias_ticket]).html_safe -%>
        <%- else -%>
<%= CSV.generate_line(['""', "", "", "", "", "", "", "", "", "", item&.line_item&.title, item&.line_item&.sku, item&.quantity, number_to_currency(item&.quantity&.to_i * item&.line_item&.price&.to_f), "", "", "", "", "", ""]).html_safe -%>
        <%- end -%>
      <%- end -%>
    <%- end -%>
  <%- end -%>
<%- end -%>